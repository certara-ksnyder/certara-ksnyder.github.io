name: Build Shinylive site and deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
          use-public-rspm: true  # faster CRAN binaries on Ubuntu

      # ðŸ‘‡ This installs R deps **and** the required system libraries on Ubuntu
      - name: Install R dependencies (shinylive + deps)
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::shinylive
            any::jsonlite
            any::bslib
            any::writexl
          needs: shinylive

      - name: Ensure app/www exists
        run: mkdir -p app/www

      # Vendor SheetJS locally so browser export always works (no CDN needed)
      - name: Fetch SheetJS if missing
        run: |
          if [ ! -f "app/www/xlsx.full.min.js" ]; then
            curl -L -o app/www/xlsx.full.min.js \
              https://cdn.sheetjs.com/xlsx-0.20.3/package/dist/xlsx.full.min.js
          fi

      - name: Export Shinylive site
        run: Rscript -e 'shinylive::export("app", "site")'

      - name: Bundle site.zip
        run: zip -r site.zip site

      - name: Upload site.zip artifact
        uses: actions/upload-artifact@v4
        with:
          name: site-zip
          path: site.zip
          retention-days: 14

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4